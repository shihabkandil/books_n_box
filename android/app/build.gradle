def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '2'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.1'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists() && !keystorePropertiesFile.isDirectory()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    keystoreProperties['uatStoreFile'] = 'dummy.keystore';
    keystoreProperties['prodStoreFile'] = 'dummy.keystore';
}

if (keystoreProperties['uatStoreFile'] == null) {
    keystoreProperties['uatStoreFile'] = 'dummy.keystore'
}

if (keystoreProperties['prodStoreFile'] == null) {
    keystoreProperties['prodStoreFile'] = 'dummy.keystore'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "eg.edu.miuegypt.booksnbox"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 6
        versionName 'v1.7'
    }

    signingConfigs {
        debug {
            storeFile file(keystoreProperties['uatStoreFile'])
            storePassword keystoreProperties['uatStorePassword']
            keyAlias keystoreProperties['uatKeyAlias']
            keyPassword keystoreProperties['uatKeyPassword']
        }

        release {
            storeFile file(keystoreProperties['prodStoreFile'])
            storePassword keystoreProperties['prodStorePassword']
            keyAlias keystoreProperties['prodKeyAlias']
            keyPassword keystoreProperties['prodKeyPassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.mlkit:text-recognition:16.0.0-beta6'
}
